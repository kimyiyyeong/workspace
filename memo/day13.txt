프론트엔드 13일차 목차입니다.

1. CSS 위치 지정
2. 화면 중앙 배치
3. CSS 애니메이션

행동하는 사람 2%가 행동하지 않는 사람 98%를 지배한다.
---------------------------------------------
가로/세로 중앙 정렬

margin 이용 가로 가운데 정렬 방법
	margin-left: auto; margin-right: auto;
	margin: 0 auto;
	margin: 0 auto 0 auto;

text-align 이용 가로 가운데 정렬 방법(부모에서 자식을 정렬할 경우 사용)
	text-align: center; //left, right
	단, 자식 박스는 반드시 display: inline-block; or inline 여야한다.

position/margin 이용 세로 가운데 정렬 방법(박스 높이를 알 경우)
	position: relative;
	top: 50%;
	margin-top: -50%;

position/transform 이용 세로 가운데 정렬 방법(박스 높이를 모를 경우)
	top: 50%;
	transform: translateY(-50%);

position/transform 이용 가로/세로 가운데 정렬
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);

CSS 에니메이션
	웹 페이지를 보다 시각적으로 역동적이게 움직이게 하기 위한 스타일 기능
	이 속성은 블록 요소(Block Element)를 기본으로 하며, 일반적으로 div 블록을 사용

에니메이션의 대표적인 속성
	transform	트랜스폼은 요소 이동, 크기 변경, 위치, 색상 등 속성 변경 수행
	transiton	트랜지션은 시간 경과에 따라 하나의 속성 상태가 다른 속성 상태로 변형
	@keyframes	키프레임 에니메이션을 만들수 있도록 해주는 블록 키워드
	animation	키프레임 에니메이션 실행을 위해 CSS에 설정해주는 속성

transform
	시간 개념이 포함되지 않는 것으로 변경 후의 결과 값만 표시한다.

사용예
	transform: 변형함수(파라메터);
	transform: 변형함수1(파라메터) 변형함수2(파라메터) 변형함수3(라파메터)...;
	transform: translate(-200px, 200px) rotate(360deg);

transition
	시간 개념을 갖는 전이에 대한 설정을 한다.
	기본적으로 transform과 같이 사용하여 에니메이션 효과를 적용한다.
	즉, 시간 순서에 대한 상태 전이는 transition으로 형태 변형은 transform으로 한다.
사용예
	transition: 속성 || 에니메이션시간 || 타이밍방식(전이방식) || 지연시간;
	transition: all 0.5s;

@keyframes
	전문적인 에니메이션 도구의 키프레임 기능과 같이 시간 순서에 따라
	요소의 동작을 정밀하게 제어할 수 있는 다양한 전용 속성들을 설정한다.
사용예
	@keyframes heartbeat {
		from { transform: scale(1.0); }
		to { transform: scale(1.3); }
	}

	@keyframes heartbeat {
		0% { transform: sclae(1.0) }
		50% { transform: scale(1.3) }
		100% { transform: scale(1.0) }
	}

animation
	키프레임 에니메이션 실행을 위해 설정해주는 속성
사용예
	animation: heartbeat 1s 3 ease;




	

